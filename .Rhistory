color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens")
library(tidyverse)
library(tidyverse)
library(epinionDSB)
library(tidyverse)
library(epinionDSB)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style()
# continuous variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens")
# continuous variable in aes()
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c()
# discrete variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
# continuous variable in aes()
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c()
grid.arrange(
p1, p2,
ncol = 1
)
library(gridExtra)
# discrete variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
# continuous variable in aes()
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c()
grid.arrange(
p1, p2,
ncol = 1
)
library(devtools)
library(usethis)
dsb_palettes <- list(
`red`  = dsb_colvec("DSB_Red"),
`two`  = dsb_colvec("DSB_Red", "DSB_DarkBlue"),
`three`   = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange"),
`four` = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange", "DSB_LightGrey"),
`full`  = dsb_colvec(),
`reds`  = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues`  = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens`  = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals`  = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Create a tibble based on the data in the DSB design manual
dsb_colors <- tibble::tibble(
name = c(
"DSB_Red",
"DSB_DarkBlue",
"DSB_LightBlue",
"DSB_Orange",
"DSB_LightGrey",
"DSB_Purple",
"DSB_Teal",
"DSB_Turqoise",
"DSB_DarkGrey",
"DSB_LightGreen",
"DSB_Green",
"DSB_DarkGreen"),
rgb = c(
"180 23 48",
"0 35 60",
"83 130 182",
"223 101 44",
"165 165 165",
"110 60 110",
"40 118 126",
"65 189 191",
"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
# ----- Pull out RGB-codes
rgb_codes <- dsb_colors$rgb
# ----- Get HEX codes, add to tibble
dsb_colors$hex_codes <- sapply(strsplit(rgb_codes, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
# ----- Create named palette of HEX codes
dsb_cols <- dsb_colors %>%
select(
c(name,
hex_codes)
) %>%
tibble::deframe()
library(magrittr)
library(tidyverse)
#' Extract HEX-codes and RGB-codes by color name
#'
#' This snippet defines a dataset of colors in the DSB Design Manual and provides their corresponding color codes in two formats:
#' RGB and HEX.
#' The code provided here is for transparency purposes only, the resulting data is provided in the data folder (dsb_colors.rda)
#' @author Jeppe Vier√∏
#' @export
# ----- Create a tibble based on the data in the DSB design manual
dsb_colors <- tibble::tibble(
name = c(
"DSB_Red",
"DSB_DarkBlue",
"DSB_LightBlue",
"DSB_Orange",
"DSB_LightGrey",
"DSB_Purple",
"DSB_Teal",
"DSB_Turqoise",
"DSB_DarkGrey",
"DSB_LightGreen",
"DSB_Green",
"DSB_DarkGreen"),
rgb = c(
"180 23 48",
"0 35 60",
"83 130 182",
"223 101 44",
"165 165 165",
"110 60 110",
"40 118 126",
"65 189 191",
"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
# ----- Pull out RGB-codes
rgb_codes <- dsb_colors$rgb
# ----- Get HEX codes, add to tibble
dsb_colors$hex_codes <- sapply(strsplit(rgb_codes, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
# ----- Create named palette of HEX codes
dsb_cols <- dsb_colors %>%
select(
c(name,
hex_codes)
) %>%
tibble::deframe()
# ----- Upload data to GitHub
getwd()
usethis::use_data(dsb_cols,
overwrite = TRUE)
document()
dsb_palettes <- list(
`red`  = dsb_colvec("DSB_Red"),
`two`  = dsb_colvec("DSB_Red", "DSB_DarkBlue"),
`three`   = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange"),
`four` = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange", "DSB_LightGrey"),
`full`  = dsb_colvec(),
`reds`  = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues`  = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens`  = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals`  = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Upload data to GitHub
usethis::use_data(dsb_palettes,
overwrite = TRUE)
document()
library(devtools)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(epinionDSB)
library(tidyverse)
library(epinionDSB)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
theme(legend.position = "bottom")
# continuous variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens")
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens",
reverse = TRUE)
grid.arrange(
p1, p2,
ncol = 1
)
library(gridExtra)
# discrete variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
# continuous variable in aes()
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c()
grid.arrange(
p1, p2,
ncol = 1
)
# continuous variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens")
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens",
reverse = TRUE)
grid.arrange(
p1, p2,
ncol = 1
)
epinionDSB::dsb_palettes
dsb_palettes <- list(
`red`  = dsb_colvec("DSB_Red"),
`main`  = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DarkGreen"),
`two`  = dsb_colvec("DSB_Red", "DSB_DarkBlue"),
`three`   = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange"),
`four` = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange", "DSB_LightGrey"),
`full`  = dsb_colvec(),
`reds`  = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues`  = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens`  = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals`  = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Upload data to GitHub
usethis::use_data(dsb_palettes,
overwrite = TRUE)
document()
library(devtools)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(epinionDSB)
dsb_palettes
dsb_palettes <- list(
`red`  = dsb_colvec("DSB_Red"),
`main`  = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_DarkGreen"),
`two`  = dsb_colvec("DSB_Red", "DSB_DarkBlue"),
`three`   = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange"),
`four` = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange", "DSB_LightGrey"),
`full`  = dsb_colvec(),
`reds`  = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues`  = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens`  = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals`  = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Upload data to GitHub
usethis::use_data(dsb_palettes,
overwrite = TRUE)
document()
library(devtools)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(epinionDSB)
dsb_palettes
mtcars
table(mtcars$cyl)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(cyl))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "full", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(cyl))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(cyl))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 5,
alpha = 0.5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 5,
alpha = 0.75) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 5,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(cyl))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
mtcars
table(mtcars$gear)
table(mtcars$carb)
color = factor(carb) +
ggplot(mtcars, aes(x = wt,
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(cyl))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(cyl))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
dsb_palettes <- list(
`red`  = dsb_colvec("DSB_Red"),
`main`  = dsb_colvec("DSB_Red", "DSB_DarkGreen", "DSB_DarkBlue"),
`two`  = dsb_colvec("DSB_Red", "DSB_DarkBlue"),
`three`   = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange"),
`four` = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange", "DSB_LightGrey"),
`full`  = dsb_colvec(),
`reds`  = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues`  = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens`  = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals`  = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Upload data to GitHub
usethis::use_data(dsb_palettes,
overwrite = TRUE)
document()
library(devtools)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(epinionDSB)
dsb_palettes
dsb_palettes$full
dsb_colvec()
class(dsb_colvec())
mtcars
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(vs))) +
geom_point(size = 7,
alpha = 0.85) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main")
dsb_palettes <- list(
`red`  = dsb_colvec("DSB_Red"),
`main`  = dsb_colvec("DSB_Red", "DSB_Green", "DSB_DarkGreen", "DSB_Grey", "DSB_DarkBlue"),
`two`  = dsb_colvec("DSB_Red", "DSB_DarkBlue"),
`three`   = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange"),
`four` = dsb_colvec("DSB_Red", "DSB_DarkBlue", "DSB_Orange", "DSB_LightGrey"),
`full`  = dsb_colvec(),
`reds`  = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues`  = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens`  = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals`  = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Upload data to GitHub
usethis::use_data(dsb_palettes,
overwrite = TRUE)
document()
