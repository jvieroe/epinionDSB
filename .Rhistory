"DSB_DarkGrey",
"DSB_LightGreen",
"DSB_Green",
"DSB_DarkGreen"),
rgb = c(
"180 23 48",
"0 35 60",
"83 130 182",
"223 101 44",
"165 165 165",
"110 60 110",
"40 118 126",
"65 189 191",
"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
library(magrittr)
library(tidyverse)
x <- dsb_colors$rgb
rgb_codes <- dsb_colors$rgb
hex_codes <- sapply(strsplit(x, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
hex_codes
dsb_colors$hex_codes <- sapply(strsplit(x, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
View(dsb_colors)
df <- mtcars
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[1])
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[1],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[2],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[3],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[4],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[5],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[6],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[7],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[8],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[9],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[10],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[11],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[12],
size = 5)
rm(list = ls())
dsb_colors <- tibble::tibble(
name = c(
"DSB_Red",
"DSB_DarkBlue",
"DSB_LightBlue",
"DSB_Orange",
"DSB_LightGrey",
"DSB_Purple",
"DSB_Teal",
"DSB_Turqoise",
"DSB_DarkGrey",
"DSB_LightGreen",
"DSB_Green",
"DSB_DarkGreen"),
rgb = c(
"180 23 48",
"0 35 60",
"83 130 182",
"223 101 44",
"165 165 165",
"110 60 110",
"40 118 126",
"65 189 191",
"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
rgb_codes <- dsb_colors$rgb
dsb_colors$hex_codes <- sapply(strsplit(rgb_codes, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[12],
size = 5)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[1],
size = 5)
#' Extract HEX-codes and RGB-codes by color name
#'
#' This function adds a DSB compliant theme to ggplot figures. It can be added at the end of your ggplot syntax.
#' @param legend a logical value indicating whether a legend is included. Defaults to TRUE.
#' @return A CVI compliant plot
#' @author Jeppe Vierø
#' @export
# ----- Create a tibble based on the data in the DSB design manual
dsb_colors <- tibble::tibble(
name = c(
"DSB_Red",
"DSB_DarkBlue",
"DSB_LightBlue",
"DSB_Orange",
"DSB_LightGrey",
"DSB_Purple",
"DSB_Teal",
"DSB_Turqoise",
"DSB_DarkGrey",
"DSB_LightGreen",
"DSB_Green",
"DSB_DarkGreen"),
rgb = c(
"180 23 48",
"0 35 60",
"83 130 182",
"223 101 44",
"165 165 165",
"110 60 110",
"40 118 126",
"65 189 191",
"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
# ----- Pull out RGB-codes
rgb_codes <- dsb_colors$rgb
# ----- Get HEX codes, add to tibble
dsb_colors$hex_codes <- sapply(strsplit(rgb_codes, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
devtools::use_data(dsb_colors)
?use_dat
usethis::use_data(dsb_colors)
devtools::document()
usethis::use_data(dsb_colors,
overwrite = TRUE)
devtools::document()
devtools::document()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(color = dsb_colors$hex_codes[1],
size = 5)
View(mtcars)
df <- mtcars
mtcars <- mtcars[1:nrow(dsb_colors)]
mtcars <- mtcars[1:nrow(dsb_colors),]
df <- mtcars[1:nrow(dsb_colors),]
df$hex_code = dsb_colors$hex_codes
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = hex_code),
size = 5)
mtcars <- mtcars[1:nrow(dsb_colors),]
mtcars$hex_code = dsb_colors$hex_codes
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = hex_code),
size = 5)
mtcars <- mtcars[1:nrow(dsb_colors),]
mtcars$hex_code = dsb_colors$hex_codes
mtcars$id <- as.factor(dplyr::row_number())
mtcars$id <- as.factor(n())
mtcars$id <- as.factor(seq(1:nrow(mtcars)))
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
scale
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5)
scale_color_manual(values = hex_code)
scale_color_manual(values = .hex_code)
scale_color_manual(values = .$hex_code)
scale_color_manual(values = mtcars$hex_code)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
scale_color_manual(values = mtcars$hex_code)
mtcars <- mtcars[1:nrow(dsb_colors),]
mtcars$hex_code = dsb_colors$hex_codes
mtcars$id <- as.factor(seq(1:nrow(mtcars)))
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
scale_color_manual(values = mtcars$hex_code)
devtools::document()
rm(list=ls())
dev.off()
dsb_style <- function(legend = TRUE) {
if (legend == FALSE) {
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none",
axis.text.x = element_text(colour = "#0F283C",
face = "bold",
size = 12),
axis.text.y = element_text(colour = "#0F283C",
face = "bold",
size = 12),
axis.title.x = element_text(colour = "#0F283C",
face = "bold",
size = 12,
vjust = -1.5),
axis.title.y = element_text(colour = "#0F283C",
face = "bold",
size = 12,
vjust = -1.5),
strip.text = element_text(colour = "#0F283C",
face = "bold",
size = 12),
strip.background = element_rect(color = "#0F283C",
fill = "#E8E1D5"),
plot.title = element_text(colour = "#0F283C",
face = "bold",
size = 16),
plot.subtitle = element_text(colour = "#0F283C",
face = "bold",
size = 16)
)
} else if (legend == TRUE) {
ggplot2::theme_minimal() +
ggplot2::theme(
legend.position = "right",
axis.text = element_text(colour = "#0F283C",
face = "bold"),
axis.title.x = element_text(colour = "#0F283C",
face = "bold",
vjust = -1.5),
strip.text = element_text(colour = "#0F283C",
face = "bold"),
strip.background = element_rect(color = "#0F283C",
fill = "#E8E1D5"),
title = element_text(colour = "#0F283C",
face = "bold")
)
}
}
library(magrittr)
library(tidyverse)
library(mtcars)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
dsb_style()
mtcars
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
dsb_style()
dsb_style <- function(legend = TRUE) {
if (legend == FALSE) {
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none",
axis.text.x = element_text(colour = "#0F283C",
face = "bold",
size = 12),
axis.text.y = element_text(colour = "#0F283C",
face = "bold",
size = 12),
axis.title.x = element_text(colour = "#0F283C",
face = "bold",
size = 12,
vjust = -1.5),
axis.title.y = element_text(colour = "#0F283C",
face = "bold",
size = 12,
vjust = -1.5),
strip.text = element_text(colour = "#0F283C",
face = "bold",
size = 12),
strip.background = element_rect(color = "#0F283C",
fill = "#E8E1D5"),
plot.title = element_text(colour = "#0F283C",
face = "bold",
size = 16),
plot.subtitle = element_text(colour = "#0F283C",
face = "bold",
size = 16)
)
} else if (legend == TRUE) {
ggplot2::theme_minimal() +
ggplot2::theme(
legend.position = "right",
axis.text = element_text(colour = "#0F283C",
face = "bold"),
axis.title.x = element_text(colour = "#0F283C",
face = "bold",
vjust = -1.5),
strip.text = element_text(colour = "#0F283C",
face = "bold"),
strip.background = element_rect(color = "#0F283C",
fill = "#E8E1D5"),
title = element_text(colour = "#0F283C",
face = "bold")
)
}
}
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = am),
size = 5) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = am),
size = 5) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = am),
size = 5) +
facet_wrap(~ cyl)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = am),
size = 5) +
facet_wrap(~ cyl) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = am),
size = 5) +
facet_wrap(~ cyl) +
dsb_style(legend = FALSE)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = am),
size = 5) +
facet_wrap(~ cyl) +
dsb_style(legend = TRUE)
#' Extract HEX-codes and RGB-codes by color name
#'
#' This snippet defines a dataset of colors in the DSB Design Manual and provides their corresponding color codes in two formats:
#' RGB and HEX.
#' The code provided here is for transparency purposes only, the resulting data is provided in the data folder (dsb_colors.rda)
#' @author Jeppe Vierø
#' @export
# ----- Create a tibble based on the data in the DSB design manual
dsb_colors <- tibble::tibble(
name = c(
"DSB_Red",
"DSB_DarkBlue",
"DSB_LightBlue",
"DSB_Orange",
"DSB_LightGrey",
"DSB_Purple",
"DSB_Teal",
"DSB_Turqoise",
"DSB_DarkGrey",
"DSB_LightGreen",
"DSB_Green",
"DSB_DarkGreen"),
rgb = c(
"180 23 48",
"0 35 60",
"83 130 182",
"223 101 44",
"165 165 165",
"110 60 110",
"40 118 126",
"65 189 191",
"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
# ----- Pull out RGB-codes
rgb_codes <- dsb_colors$rgb
# ----- Get HEX codes, add to tibble
dsb_colors$hex_codes <- sapply(strsplit(rgb_codes, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
# ----- Upload data to GitHub
usethis::use_data(dsb_colors,
overwrite = TRUE)
# ----- Try out the colors
mtcars <- mtcars[1:nrow(dsb_colors),]
mtcars$hex_code = dsb_colors$hex_codes
mtcars$id <- as.factor(seq(1:nrow(mtcars)))
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
scale_color_manual(values = mtcars$hex_code)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
scale_color_manual(values = mtcars$hex_code) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = id),
size = 5) +
scale_color_manual(values = mtcars$hex_code)
getwd()
devtools::use_vignette("introduction")
library(devtools)
library(usethat)
library(usethis)
devtools::use_vignette("introduction")
usethat::use_vignette("introduction")
usethis::use_vignette("introduction")
devtools::document()
rm(dsb_style)
devtools::document()
dsb_style <- function(legend = TRUE) {
if (legend == FALSE) {
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none",
axis.text.x = element_text(colour = "#0F283C",
face = "bold",
size = 12),
axis.text.y = element_text(colour = "#0F283C",
face = "bold",
size = 12),
axis.title.x = element_text(colour = "#0F283C",
face = "bold",
size = 12,
vjust = -1.5),
axis.title.y = element_text(colour = "#0F283C",
face = "bold",
size = 12,
vjust = -1.5),
strip.text = element_text(colour = "#0F283C",
face = "bold",
size = 12),
strip.background = element_rect(color = "#0F283C",
fill = "#E8E1D5"),
plot.title = element_text(colour = "#0F283C",
face = "bold",
size = 16),
plot.subtitle = element_text(colour = "#0F283C",
face = "bold",
size = 16)
)
} else if (legend == TRUE) {
ggplot2::theme_minimal() +
ggplot2::theme(
legend.position = "right",
axis.text = element_text(colour = "#0F283C",
face = "bold"),
axis.title.x = element_text(colour = "#0F283C",
face = "bold",
vjust = -1.5),
strip.text = element_text(colour = "#0F283C",
face = "bold"),
strip.background = element_rect(color = "#0F283C",
fill = "#E8E1D5"),
title = element_text(colour = "#0F283C",
face = "bold")
)
}
}
usethis::use_readme_rmd()
rm(dsb_style)
devtools::document()
usethis::use_readme_rmd()
devtools::document()
# ----- Load packages
library(devtools)
library(usethis)
