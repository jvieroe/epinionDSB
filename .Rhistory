"116 116 116",
"136 201 136",
"28 166 69",
"20 78 54"
))
# ----- Pull out RGB-codes
rgb_codes <- dsb_colors$rgb
# ----- Get HEX codes, add to tibble
dsb_colors$hex_codes <- sapply(strsplit(rgb_codes, " "), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
# # ----- Upload data to GitHub
# usethis::use_data(dsb_colors,
#                   overwrite = TRUE)
# ----- Create named palette of HEX codes
# dsb_cols <- dsb_colors %>%
#   select(
#     c(name,
#       hex_codes)
#   ) %>%
#   tibble::deframe()
dsb_cols <- dsb_colors
rm(dsb_colors)
dsb_cols <- dsb_cols[, c(1,3)]
dsb_cols <- tibble::deframe(dsb_cols)
# ----- Upload data to GitHub
getwd()
save(dsb_cols,
file = "data/dsb_cols.rda")
# usethis::use_data(dsb_cols,
#                   overwrite = TRUE)
# https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# ----- Create list with continuous color palettes
dsb_palettes <- list(
`reds` = dsb_colvec("DSB_Orange", "DSB_Red"),
`blues` = dsb_colvec("DSB_LightBlue", "DSB_DarkBlue"),
`greens` = dsb_colvec("DSB_LightGreen", "DSB_Green", "DSB_DarkGreen"),
`teals` = dsb_colvec("DSB_Turqoise", "DSB_Teal")
)
# ----- Create list of lists with discrete color palettes
dsb_palettes_d <- list()
dsb_palettes_d$main <- list(
"DSB_Red" = "#B41730",
"DSB_DarkBlue" = "#00233C",
"DSB_Orange" = "#DF652C",
"DSB_DarkGreen" = "#144E36",
"DSB_Purple" = "#6E3C6E",
"DSB_Teal" = "#28767E",
"DSB_DarkGrey" = "#747474",
"DSB_LightBlue" = "#5382B6",
"DSB_LightGreen" = "#88C988",
"DSB_Turqoise" = "#41BDBF",
"DSB_Green" = "#1CA645",
"DSB_LightGrey" = "#A5A5A5"
)
# ----- Upload data to GitHub
getwd()
getwd()
save(dsb_palettes,
file = "data/dsb_palettes.rda")
save(dsb_palettes_d,
file = "data/dsb_palettes_d.rda")
document()
rm(dsb_colvec, dsb_cols, rgb_codes)
document()
document()
document()
document()
library(devtools)
library(usethis)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(magrittr)
library(epinionDSB)
library(tidyverse)
library(magrittr)
library(epinionDSB)
dsb_palettes
dsb_palettes_d
mtcars
mtcars2 <- mtcars %>%
tibble::rownames_to_column("car") %>%
mutate(carb2 = ifelse(car == "Mazda RX4",
10,
carb)) %>%
mutate(carb3 = ifelse(car == "Volvo 142E",
12,
carb2))
length(unique(mtcars2$carb2))
length(unique(mtcars2$carb3))
length(unique(mtcars2$carb))
length(dsb_palettes$main)
# it only works with exact match of length of palette and number of categories
# should be able to just pick what it needs
ggplot(mtcars2, aes(x = wt,
y = mpg,
color = factor(carb3))) +
geom_point(size = 7) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
dsb_palettes_d
length(dsb_palettes_d)
tt <- dsb_palettes_d
View(tt)
tt <- dsb_palettes_d$main
length(dsb_palettes_d$main)
rm(mtcars2)
rm(tt)
document()
library(devtools)
library(usethis)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(magrittr)
library(epinionDSB)
dsb_palettes
dsb_palettes_d
mtcars
mtcars2 <- mtcars %>%
tibble::rownames_to_column("car") %>%
mutate(carb2 = ifelse(car == "Mazda RX4",
10,
carb)) %>%
mutate(carb3 = ifelse(car == "Volvo 142E",
12,
carb2))
length(unique(mtcars2$carb2))
length(unique(mtcars2$carb3))
length(unique(mtcars2$carb))
length(dsb_palettes$main)
# it only works with exact match of length of palette and number of categories
# should be able to just pick what it needs
ggplot(mtcars2, aes(x = wt,
y = mpg,
color = factor(carb3))) +
geom_point(size = 7) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
table(mtcars$cyl)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 7,
alpha = 1) +
facet_wrap(~ vs) +
dsb_style() +
#color_dsb_d(palette = "four")
colour_dsb_d()
mtcars
table(mtcars$cyl)
dsb_palettes
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "full", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(reverse = F)
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "two", reverse = F)
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F)
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(reverse = F)
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(reverse = T)
grid.arrange(
p1, p2,
ncol = 1
)
library(gridExtra)
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(reverse = F)
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(reverse = T)
grid.arrange(
p1, p2,
ncol = 1
)
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(reverse = T)
grid.arrange(
p1, p2,
ncol = 1
)
?color_dsb_d
?discrete_scale
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "two", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F,
guide = none)
rm(list = ls())
document()
library(devtools)
library(usethis)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(magrittr)
library(epinionDSB)
dsb_palettes
dsb_palettes_d
mtcars
mtcars2 <- mtcars %>%
tibble::rownames_to_column("car") %>%
mutate(carb2 = ifelse(car == "Mazda RX4",
10,
carb)) %>%
mutate(carb3 = ifelse(car == "Volvo 142E",
12,
carb2))
length(unique(mtcars2$carb2))
length(unique(mtcars2$carb3))
length(unique(mtcars2$carb))
length(dsb_palettes$main)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F,
guide = none)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F,
guide = "none")
rm(mtcars2)
document()
library(devtools)
library(usethis)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(magrittr)
library(epinionDSB)
mtcars2 <- mtcars %>%
tibble::rownames_to_column("car") %>%
mutate(carb2 = ifelse(car == "Mazda RX4",
10,
carb)) %>%
mutate(carb3 = ifelse(car == "Volvo 142E",
12,
carb2))
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F,
guide = "none")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F)
rm(mtcars2)
document()
library(devtools)
library(usethis)
devtools::install_github("jvieroe/epinionDSB")
library(tidyverse)
library(magrittr)
library(epinionDSB)
dsb_palettes
dsb_palettes_d
mtcars2 <- mtcars %>%
tibble::rownames_to_column("car") %>%
mutate(carb2 = ifelse(car == "Mazda RX4",
10,
carb)) %>%
mutate(carb3 = ifelse(car == "Volvo 142E",
12,
carb2))
# it only works with exact match of length of palette and number of categories
# should be able to just pick what it needs
ggplot(mtcars2, aes(x = wt,
y = mpg,
color = factor(carb3))) +
geom_point(size = 7) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
table(mtcars$cyl)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 7,
alpha = 1) +
facet_wrap(~ vs) +
dsb_style() +
#color_dsb_d(palette = "four")
colour_dsb_d()
mtcars
table(mtcars$cyl)
dsb_palettes
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F,
guide = "none")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(carb))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d(palette = "main", reverse = F,
guide = "none")
?discrete_scale
library(tidyverse)
library(epinionDSB)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
theme(legend.position = "bottom")
# ... all DSB colors
dsb_colvec()
# a selection of colors
dsb_colvec("DSB_Red", "DSB_DarkBlue")
# ... a selection of colors
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 3) +
facet_wrap(~ vs) +
dsb_style() +
scale_colour_manual(values = c("#B41730", "#00233C"))
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 7) +
facet_wrap(~ vs) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
theme(legend.position = "bottom")
# ... all DSB colors
dsb_colvec()
# a selection of colors
dsb_colvec("DSB_Red", "DSB_DarkBlue")
# ... a selection of colors
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
scale_colour_manual(values = c("#B41730", "#00233C"))
library(gridExtra)
# discrete variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_d()
# continuous variable in aes()
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c()
grid.arrange(
p1, p2,
ncol = 1
)
# continuous variable in aes()
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens")
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 5) +
facet_wrap(~ vs) +
dsb_style() +
color_dsb_c(palette = "greens",
reverse = TRUE)
grid.arrange(
p1, p2,
ncol = 1
)
rm(p1, p2)
devtools::document()
